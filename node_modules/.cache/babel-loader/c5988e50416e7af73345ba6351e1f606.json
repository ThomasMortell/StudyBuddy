{"ast":null,"code":"import _slicedToArray from \"/home/george/Documents/College/Third Year/CS353/workingserver/studybuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/george/Documents/College/Third Year/CS353/workingserver/studybuddy/src/components/Login.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signup, signin, resetPassword } from \"../store/actions/auth\";\nimport useForm from \"../utils/useForm\";\nimport validate from \"../utils/validateLoginForm\";\nimport Spinner from \"./Spinner\";\n\nconst Login = ({\n  signup,\n  signin,\n  resetPassword,\n  authMsg,\n  history,\n  loading\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        newUser = _useState2[0],\n        setNewUser = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        reset = _useState4[0],\n        SetReset = _useState4[1];\n\n  const _useForm = useForm(login, validate, reset),\n        _useForm2 = _slicedToArray(_useForm, 4),\n        credentials = _useForm2[0],\n        handleChange = _useForm2[1],\n        handleSubmit = _useForm2[2],\n        errors = _useForm2[3];\n\n  function login() {\n    if (newUser) {\n      // signup\n      signup(credentials.email, credentials.password);\n    } else {\n      if (reset) {\n        // reset password\n        resetPassword(credentials.email);\n      } else {\n        // signin\n        signin(credentials.email, credentials.password, () => history.push(\"/\"));\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Hi there!\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, reset ? \"Reset password\" : newUser ? \"Create an account\" : \"Sign in\"), authMsg && React.createElement(\"p\", {\n    className: \"auth-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, authMsg), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: credentials.email,\n    placeholder: \"Your e-mail\",\n    onChange: handleChange,\n    className: (errors.emailIsEmpty || errors.emailFormatInvalid) && \"input-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), errors.emailIsEmpty && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, errors.emailIsEmpty), errors.emailFormatInvalid && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, errors.emailFormatInvalid)), !reset && React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: credentials.password,\n    placeholder: \"Your password\",\n    onChange: handleChange,\n    className: (errors.passIsStrong || errors.passIsEmpty) && \"input-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), errors.passIsStrong && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, errors.passIsStrong), errors.passIsEmpty && React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, errors.passIsEmpty)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }) : reset ? \"Reset password\" : newUser ? \"Create account\" : \"Sign in\"), !newUser && !reset && React.createElement(\"button\", {\n    onClick: () => SetReset(true),\n    className: \"btn-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Forgot password?\"), reset && React.createElement(\"button\", {\n    onClick: () => SetReset(false),\n    className: \"btn-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Back to sign in\"))), React.createElement(\"footer\", {\n    className: \"login-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, newUser ? \"Already have an account?\" : \"Don't have an account yet?\"), React.createElement(\"button\", {\n    onClick: () => {\n      setNewUser(!newUser);\n      if (reset) SetReset(false);\n    },\n    className: \"btn-switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, newUser ? \"Sign in\" : \"Create an account\")));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    authMsg: state.authReducer.authMsg,\n    loading: state.apiStatusReducer.apiCallsInProgress > 0\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signup: (email, password) => dispatch(signup(email, password)),\n    signin: (email, password, callback) => dispatch(signin(email, password, callback)),\n    resetPassword: email => dispatch(resetPassword(email))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/george/Documents/College/Third Year/CS353/workingserver/studybuddy/src/components/Login.js"],"names":["React","useState","connect","signup","signin","resetPassword","useForm","validate","Spinner","Login","authMsg","history","loading","newUser","setNewUser","reset","SetReset","login","credentials","handleChange","handleSubmit","errors","email","password","push","emailIsEmpty","emailFormatInvalid","passIsStrong","passIsEmpty","mapStateToProps","state","authReducer","apiStatusReducer","apiCallsInProgress","mapDispatchToProps","dispatch","callback"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signup, signin, resetPassword } from \"../store/actions/auth\";\nimport useForm from \"../utils/useForm\";\nimport validate from \"../utils/validateLoginForm\";\nimport Spinner from \"./Spinner\";\n\nconst Login = ({\n  signup,\n  signin,\n  resetPassword,\n  authMsg,\n  history,\n  loading\n}) => {\n  const [newUser, setNewUser] = useState(false);\n  const [reset, SetReset] = useState(false);\n  const [credentials, handleChange, handleSubmit, errors] = useForm(\n    login,\n    validate,\n    reset\n  );\n\n  function login() {\n    if (newUser) {\n      // signup\n      signup(credentials.email, credentials.password);\n    } else {\n      if (reset) {\n        // reset password\n        resetPassword(credentials.email);\n      } else {\n        // signin\n        signin(credentials.email, credentials.password, () =>\n          history.push(\"/\")\n        );\n      }\n    }\n  }\n\n  return (\n    <div className=\"login\">\n      <h1>Hi there!</h1>\n      <h2>\n        {reset ? \"Reset password\" : newUser ? \"Create an account\" : \"Sign in\"}\n      </h2>\n      {authMsg && <p className=\"auth-message\">{authMsg}</p>}\n      <form onSubmit={handleSubmit} noValidate>\n        {/* Email */}\n        <div className=\"input-group\">\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={credentials.email}\n            placeholder=\"Your e-mail\"\n            onChange={handleChange}\n            className={\n              (errors.emailIsEmpty || errors.emailFormatInvalid) &&\n              \"input-error\"\n            }\n          />\n          {errors.emailIsEmpty && <small>{errors.emailIsEmpty}</small>}\n          {errors.emailFormatInvalid && (\n            <small>{errors.emailFormatInvalid}</small>\n          )}\n        </div>\n\n        {/* PASSWORD */}\n        {!reset && (\n          <div className=\"input-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={credentials.password}\n              placeholder=\"Your password\"\n              onChange={handleChange}\n              className={\n                (errors.passIsStrong || errors.passIsEmpty) && \"input-error\"\n              }\n            />\n            {errors.passIsStrong && <small>{errors.passIsStrong}</small>}\n            {errors.passIsEmpty && <small>{errors.passIsEmpty}</small>}\n          </div>\n        )}\n\n        {/* BUTTONS */}\n        <div>\n          <button type=\"submit\" className=\"btn-login\">\n            {loading ? (\n              <Spinner />\n            ) : reset ? (\n              \"Reset password\"\n            ) : newUser ? (\n              \"Create account\"\n            ) : (\n              \"Sign in\"\n            )}\n          </button>\n          {!newUser && !reset && (\n            <button onClick={() => SetReset(true)} className=\"btn-link\">\n              Forgot password?\n            </button>\n          )}\n          {reset && (\n            <button onClick={() => SetReset(false)} className=\"btn-link\">\n              Back to sign in\n            </button>\n          )}\n        </div>\n      </form>\n      <footer className=\"login-footer\">\n        <p>\n          {newUser ? \"Already have an account?\" : \"Don't have an account yet?\"}\n        </p>\n        <button\n          onClick={() => {\n            setNewUser(!newUser);\n            if (reset) SetReset(false);\n          }}\n          className=\"btn-switch\"\n        >\n          {newUser ? \"Sign in\" : \"Create an account\"}\n        </button>\n      </footer>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    authMsg: state.authReducer.authMsg,\n    loading: state.apiStatusReducer.apiCallsInProgress > 0\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signup: (email, password) => dispatch(signup(email, password)),\n    signin: (email, password, callback) =>\n      dispatch(signin(email, password, callback)),\n    resetPassword: email => dispatch(resetPassword(email))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}